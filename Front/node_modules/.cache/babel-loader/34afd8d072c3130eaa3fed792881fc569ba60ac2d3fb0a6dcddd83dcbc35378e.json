{"ast":null,"code":"var _jsxFileName = \"/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Content/BulkFileXml.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport \"./Styles/content.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BulkFileXml() {\n  _s();\n  const [selectedMethod, setSelectedMethod] = useState(\"file\");\n  const [files, setFiles] = useState([]);\n  const [dragState, setDragState] = useState(false);\n  const [dropMsg, setDropMsg] = useState(\"Arraste o arquivo nesta área ou clique para fazer upload\");\n  const dropFileUpload = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const xmlContent = e.target.result;\n      const blob = new Blob([xmlContent], {\n        type: \"text/xml\"\n      });\n      handleSave(blob);\n    };\n    reader.readAsText(files[0]);\n  };\n  const dragOverHandler = e => {};\n  const handleDragEnter = e => {\n    setDragState(true);\n  };\n  const handleDragLeave = e => {\n    setDragState(false);\n  };\n  const traditionalFileUpload = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n  const handleSave = blob => {\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      const xmlContent = event.target.result;\n      fetch(\"http://127.0.0.1:8080/processarxml\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/xml\",\n          \"Content-Type\": \"application/xml\"\n        },\n        body: xmlContent\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to save XML\");\n        }\n        // Realizar alguma ação após o sucesso, se necessário\n      }).catch(error => {\n        console.error(\"Error saving XML:\", error);\n        // Tratar o erro, se necessário\n      });\n    };\n    reader.readAsText(blob); // Lê o arquivo XML como texto\n  };\n  const _textContent = value => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onDrop: e => dropFileUpload(e),\n        onDragOver: e => dragOverHandler(e),\n        onDragEnter: e => handleDragEnter(e),\n        onDragLeave: e => handleDragLeave(e),\n        className: \"content-zone\",\n        children: [selectedMethod === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `info ${dragState && \"drop-enabled\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drop-or-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fileUpload\",\n                className: \"custom-link\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"fileUpload\",\n                  type: \"file\",\n                  hidden: true,\n                  accept: \"application/xml\",\n                  onChange: e => traditionalFileUpload(e),\n                  multiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), dropMsg]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), files && files.length > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"file-name\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Arquivo(s) selecionado(s):\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: files.map((f, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: f.name\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 32\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), selectedMethod === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-box\",\n            placeholder: \"Cole o conte\\xFAdo do XML aqui\",\n            onChange: e => _textContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"buttonContainer\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => handleSave(files[0]),\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BulkFileXml, \"bkSk4b+qhwZHyKe7NDk72yrA9ck=\");\n_c = BulkFileXml;\nvar _c;\n$RefreshReg$(_c, \"BulkFileXml\");","map":{"version":3,"names":["React","useState","Box","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BulkFileXml","_s","selectedMethod","setSelectedMethod","files","setFiles","dragState","setDragState","dropMsg","setDropMsg","dropFileUpload","e","preventDefault","dataTransfer","reader","FileReader","onload","xmlContent","target","result","blob","Blob","type","handleSave","readAsText","dragOverHandler","handleDragEnter","handleDragLeave","traditionalFileUpload","selectedFiles","Array","from","event","fetch","method","headers","Accept","body","then","response","ok","Error","catch","error","console","_textContent","value","children","className","onDrop","onDragOver","onDragEnter","onDragLeave","htmlFor","id","hidden","accept","onChange","multiple","fileName","_jsxFileName","lineNumber","columnNumber","length","map","f","i","name","placeholder","variant","color","onClick","_c","$RefreshReg$"],"sources":["/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Content/BulkFileXml.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport \"./Styles/content.scss\";\n\nexport default function BulkFileXml() {\n  const [selectedMethod, setSelectedMethod] = useState(\"file\");\n  const [files, setFiles] = useState([]);\n  const [dragState, setDragState] = useState(false);\n  const [dropMsg, setDropMsg] = useState(\n    \"Arraste o arquivo nesta área ou clique para fazer upload\"\n  );\n  const dropFileUpload = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const xmlContent = e.target.result;\n      const blob = new Blob([xmlContent], { type: \"text/xml\" });\n      handleSave(blob);\n    };\n    reader.readAsText(files[0]);\n  };\n\n  const dragOverHandler = (e) => {};\n\n  const handleDragEnter = (e) => {\n    setDragState(true);\n  };\n\n  const handleDragLeave = (e) => {\n    setDragState(false);\n  };\n\n  const traditionalFileUpload = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n  const handleSave = (blob) => {\n    const reader = new FileReader();\n\n    reader.onload = function (event) {\n      const xmlContent = event.target.result;\n\n      fetch(\"http://127.0.0.1:8080/processarxml\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/xml\",\n          \"Content-Type\": \"application/xml\",\n        },\n        body: xmlContent,\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\"Failed to save XML\");\n          }\n          // Realizar alguma ação após o sucesso, se necessário\n        })\n        .catch((error) => {\n          console.error(\"Error saving XML:\", error);\n          // Tratar o erro, se necessário\n        });\n    };\n\n    reader.readAsText(blob); // Lê o arquivo XML como texto\n  };\n\n  const _textContent = (value) => {};\n\n  return (\n    <>\n      <div className=\"container\">\n        <div\n          onDrop={(e) => dropFileUpload(e)}\n          onDragOver={(e) => dragOverHandler(e)}\n          onDragEnter={(e) => handleDragEnter(e)}\n          onDragLeave={(e) => handleDragLeave(e)}\n          className=\"content-zone\"\n        >\n          {selectedMethod === \"file\" && (\n            <div className={`info ${dragState && \"drop-enabled\"}`}>\n              <div className=\"drop-or-upload\">\n                <h3>\n                  <label htmlFor=\"fileUpload\" className=\"custom-link\">\n                    <input\n                      id=\"fileUpload\"\n                      type=\"file\"\n                      hidden\n                      accept=\"application/xml\"\n                      onChange={(e) => traditionalFileUpload(e)}\n                      multiple\n                    />\n                    {dropMsg}\n                  </label>\n                </h3>\n              </div>\n              {files && files.length > 0 && (\n                <small className=\"file-name\">\n                  <>\n                    Arquivo(s) selecionado(s):\n                    <ul>\n                      {files.map((f, i) => {\n                        return <li key={i}>{f.name}</li>;\n                      })}\n                    </ul>\n                  </>\n                </small>\n              )}\n            </div>\n          )}\n          {selectedMethod === \"text\" && (\n            <>\n              <textarea\n                className=\"text-box\"\n                placeholder=\"Cole o conteúdo do XML aqui\"\n                onChange={(e) => _textContent(e.target.value)}\n              />\n            </>\n          )}\n        </div>\n      </div>\n      <Box className=\"buttonContainer\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleSave(files[0])}\n        >\n          Salvar\n        </Button>\n      </Box>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}