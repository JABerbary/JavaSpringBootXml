{"ast":null,"code":"var _jsxFileName = \"/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Grids/GridDados.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// const columns = [\n//   { field: \"id\", headerName: \"id\", width: 130 },\n//   { field: \"cnpj\", headerName: \"cnpj\", width: 130 },\n//   { field: \"cnpjdest\", headerName: \"cnpjdest\", width: 160 },\n//   { field: \"cuf\", headerName: \"cuf\", width: 130 },\n//   { field: \"dh_emi\", headerName: \"dh_emi\", width: 130 },\n//   { field: \"id_nfse\", headerName: \"id_nfse\", width: 160 },\n//   { field: \"nnf\", headerName: \"nnf\", width: 130 },\n//   { field: \"vnf\", headerName: \"vnf\", width: 130 },\n//   { field: \"v_tot_trib\", headerName: \"v_tot_trib\", width: 160 },\n//   { field: \"x_fant\", headerName: \"x_fant\", width: 130 },\n//   { field: \"x_nome\", headerName: \"x_nome\", width: 130 },\n// ];\n\n// const rows = [\n//   {\n//     id: 1,\n//     cnpj: \"12345678901234\",\n//     cnpjdest: \"98765432109876\",\n//     cuf: \"SP\",\n//     dh_emi: \"2024-02-13T12:00:00\",\n//     id_nfse: \"NFSE-123\",\n//     nnf: \"001\",\n//     vnf: 100.0,\n//     v_tot_trib: 20.0,\n//     x_fant: \"Empresa Fantasia\",\n//     x_nome: \"Empresa Nome\",\n//   },\n//   {\n//     id: 2,\n//     cnpj: \"23456789012345\",\n//     cnpjdest: \"87654321098765\",\n//     cuf: \"RJ\",\n//     dh_emi: \"2024-02-13T12:15:00\",\n//     id_nfse: \"NFSE-456\",\n//     nnf: \"002\",\n//     vnf: 150.0,\n//     v_tot_trib: 25.0,\n//     x_fant: \"Outra Fantasia\",\n//     x_nome: \"Outro Nome\",\n//   },\n//   // Adicione outras linhas conforme necessário\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GridDados() {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:8080/buscartodosxmla\") // Substitua 'URL_DO_SEU_BACKEND' pela URL real do seu backend\n    .then(response => {\n      setRows(response.data);\n    }).catch(error => {\n      console.error(\"Erro ao buscar dados:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(GridDados, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = GridDados;\nvar _c;\n$RefreshReg$(_c, \"GridDados\");","map":{"version":3,"names":["React","Box","DataGrid","jsxDEV","_jsxDEV","GridDados","_s","rows","setRows","useState","useEffect","axios","get","then","response","data","catch","error","console","children","columns","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Grids/GridDados.js"],"sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// const columns = [\n//   { field: \"id\", headerName: \"id\", width: 130 },\n//   { field: \"cnpj\", headerName: \"cnpj\", width: 130 },\n//   { field: \"cnpjdest\", headerName: \"cnpjdest\", width: 160 },\n//   { field: \"cuf\", headerName: \"cuf\", width: 130 },\n//   { field: \"dh_emi\", headerName: \"dh_emi\", width: 130 },\n//   { field: \"id_nfse\", headerName: \"id_nfse\", width: 160 },\n//   { field: \"nnf\", headerName: \"nnf\", width: 130 },\n//   { field: \"vnf\", headerName: \"vnf\", width: 130 },\n//   { field: \"v_tot_trib\", headerName: \"v_tot_trib\", width: 160 },\n//   { field: \"x_fant\", headerName: \"x_fant\", width: 130 },\n//   { field: \"x_nome\", headerName: \"x_nome\", width: 130 },\n// ];\n\n// const rows = [\n//   {\n//     id: 1,\n//     cnpj: \"12345678901234\",\n//     cnpjdest: \"98765432109876\",\n//     cuf: \"SP\",\n//     dh_emi: \"2024-02-13T12:00:00\",\n//     id_nfse: \"NFSE-123\",\n//     nnf: \"001\",\n//     vnf: 100.0,\n//     v_tot_trib: 20.0,\n//     x_fant: \"Empresa Fantasia\",\n//     x_nome: \"Empresa Nome\",\n//   },\n//   {\n//     id: 2,\n//     cnpj: \"23456789012345\",\n//     cnpjdest: \"87654321098765\",\n//     cuf: \"RJ\",\n//     dh_emi: \"2024-02-13T12:15:00\",\n//     id_nfse: \"NFSE-456\",\n//     nnf: \"002\",\n//     vnf: 150.0,\n//     v_tot_trib: 25.0,\n//     x_fant: \"Outra Fantasia\",\n//     x_nome: \"Outro Nome\",\n//   },\n//   // Adicione outras linhas conforme necessário\n// ];\n\nexport default function GridDados() {\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:8080/buscartodosxmla\") // Substitua 'URL_DO_SEU_BACKEND' pela URL real do seu backend\n      .then((response) => {\n        setRows(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Erro ao buscar dados:\", error);\n      });\n  }, []);\n  return (\n    <Box>\n      <DataGrid rows={rows} columns={columns} />\n    </Box>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IAAA,CAC7CC,IAAI,CAAEC,QAAQ,IAAK;MAClBN,OAAO,CAACM,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACEb,OAAA,CAACH,GAAG;IAAAkB,QAAA,eACFf,OAAA,CAACF,QAAQ;MAACK,IAAI,EAAEA,IAAK;MAACa,OAAO,EAAEA;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAClB,EAAA,CAjBuBD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}