{"ast":null,"code":"var _jsxFileName = \"/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Content/BulkFileXml.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport \"./Styles/content.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BulkFileXml() {\n  _s();\n  const [selectedMethod, setSelectedMethod] = useState(\"file\"); // Estado para acompanhar o método selecionado (arquivo ou texto)\n  const [files, setFiles] = useState([]); // Estado para acompanhar os arquivos selecionados\n  const [dragState, setDragState] = useState(false); // Estado para acompanhar o estado de arrasto\n  const [dropMsg, setDropMsg] = useState(\"Arraste o arquivo nesta área ou clique para fazer upload\");\n  const dropFileUpload = e => {};\n  const dragOverHandler = e => {};\n  const handleDragEnter = e => {\n    setDragState(true);\n  };\n  const handleDragLeave = e => {\n    setDragState(false);\n  };\n  const traditionalFileUpload = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n  const _textContent = value => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onDrop: e => dropFileUpload(e),\n        onDragOver: e => dragOverHandler(e),\n        onDragEnter: e => handleDragEnter(e),\n        onDragLeave: e => handleDragLeave(e),\n        className: \"content-zone\",\n        children: [selectedMethod === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `info ${dragState && \"drop-enabled\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drop-or-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fileUpload\",\n                className: \"custom-link\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"fileUpload\",\n                  type: \"file\",\n                  hidden: true,\n                  accept: \"text/xml\",\n                  onChange: e => traditionalFileUpload(e),\n                  multiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), dropMsg]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), files && files.length > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"file-name\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Arquivo(s) selecionado(s):\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: files.map((f, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: f.name\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 32\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), selectedMethod === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"text-box\",\n            placeholder: \"Cole o conte\\xFAdo do XML aqui\",\n            onChange: e => _textContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"buttonContainer\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BulkFileXml, \"bkSk4b+qhwZHyKe7NDk72yrA9ck=\");\n_c = BulkFileXml;\nvar _c;\n$RefreshReg$(_c, \"BulkFileXml\");","map":{"version":3,"names":["React","useState","Box","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BulkFileXml","_s","selectedMethod","setSelectedMethod","files","setFiles","dragState","setDragState","dropMsg","setDropMsg","dropFileUpload","e","dragOverHandler","handleDragEnter","handleDragLeave","traditionalFileUpload","selectedFiles","Array","from","target","_textContent","value","children","className","onDrop","onDragOver","onDragEnter","onDragLeave","htmlFor","id","type","hidden","accept","onChange","multiple","fileName","_jsxFileName","lineNumber","columnNumber","length","map","f","i","name","placeholder","variant","color","_c","$RefreshReg$"],"sources":["/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Content/BulkFileXml.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport \"./Styles/content.scss\";\n\nexport default function BulkFileXml() {\n  const [selectedMethod, setSelectedMethod] = useState(\"file\"); // Estado para acompanhar o método selecionado (arquivo ou texto)\n  const [files, setFiles] = useState([]); // Estado para acompanhar os arquivos selecionados\n  const [dragState, setDragState] = useState(false); // Estado para acompanhar o estado de arrasto\n  const [dropMsg, setDropMsg] = useState(\n    \"Arraste o arquivo nesta área ou clique para fazer upload\"\n  );\n\n  const dropFileUpload = (e) => {};\n\n  const dragOverHandler = (e) => {};\n\n  const handleDragEnter = (e) => {\n    setDragState(true);\n  };\n\n  const handleDragLeave = (e) => {\n    setDragState(false);\n  };\n\n  const traditionalFileUpload = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n\n  const _textContent = (value) => {};\n\n  return (\n    <>\n      <div className=\"container\">\n        <div\n          onDrop={(e) => dropFileUpload(e)}\n          onDragOver={(e) => dragOverHandler(e)}\n          onDragEnter={(e) => handleDragEnter(e)}\n          onDragLeave={(e) => handleDragLeave(e)}\n          className=\"content-zone\"\n        >\n          {selectedMethod === \"file\" && (\n            <div className={`info ${dragState && \"drop-enabled\"}`}>\n              <div className=\"drop-or-upload\">\n                <h3>\n                  <label htmlFor=\"fileUpload\" className=\"custom-link\">\n                    <input\n                      id=\"fileUpload\"\n                      type=\"file\"\n                      hidden\n                      accept=\"text/xml\"\n                      onChange={(e) => traditionalFileUpload(e)}\n                      multiple\n                    />\n                    {dropMsg}\n                  </label>\n                </h3>\n              </div>\n              {files && files.length > 0 && (\n                <small className=\"file-name\">\n                  <>\n                    Arquivo(s) selecionado(s):\n                    <ul>\n                      {files.map((f, i) => {\n                        return <li key={i}>{f.name}</li>;\n                      })}\n                    </ul>\n                  </>\n                </small>\n              )}\n            </div>\n          )}\n          {selectedMethod === \"text\" && (\n            <>\n              <textarea\n                className=\"text-box\"\n                placeholder=\"Cole o conteúdo do XML aqui\"\n                onChange={(e) => _textContent(e.target.value)}\n              />\n            </>\n          )}\n        </div>\n      </div>\n      <Box className=\"buttonContainer\">\n        <Button variant=\"contained\" color=\"primary\">\n          Salvar\n        </Button>\n      </Box>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}