{"ast":null,"code":"var _jsxFileName = \"/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Content/BulkFileXml.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport \"./content.scss\"; // Importando o arquivo content.scss\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BulkFileXml() {\n  _s();\n  const [selectedMethod, setSelectedMethod] = useState(\"file\"); // Estado para acompanhar o método selecionado (arquivo ou texto)\n  const [files, setFiles] = useState([]); // Estado para acompanhar os arquivos selecionados\n\n  const dropFileUpload = e => {\n    // Lógica para manipular o evento de soltar arquivos na área de soltar\n  };\n  const dragOverHandler = e => {\n    // Lógica para manipular o evento de arrastar sobre a área de soltar\n  };\n  const handleDragEnter = e => {\n    // Lógica para manipular o evento de entrada do mouse na área de soltar\n  };\n  const handleDragLeave = e => {\n    // Lógica para manipular o evento de saída do mouse da área de soltar\n  };\n  const traditionalFileUpload = e => {\n    // Lógica para manipular o evento de seleção de arquivo tradicional\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n  const _textContent = value => {\n    // Lógica para manipular o conteúdo do texto\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"content-zone\",\n      onDrop: e => dropFileUpload(e),\n      onDragOver: e => dragOverHandler(e),\n      onDragEnter: e => handleDragEnter(e),\n      onDragLeave: e => handleDragLeave(e),\n      children: [selectedMethod === \"file\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `info ${dragState && \"drop-enabled\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-or-upload\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileUpload\",\n              className: \"custom-link\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"fileUpload\",\n                type: \"file\",\n                hidden: true,\n                accept: \"text/xml\",\n                onChange: e => traditionalFileUpload(e),\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), dropMsg]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), files && files.length > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"file-name\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Arquivo(s) selecionado(s):\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: files.map((f, i) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: f.name\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 30\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), selectedMethod === \"text\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-box\",\n          placeholder: \"Cole o conte\\xFAdo do XML aqui\",\n          onChange: e => _textContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"buttonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"primaryButton\",\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(BulkFileXml, \"rCI5NB1lSYZpD5DsL1rWB0BQ+EA=\");\n_c = BulkFileXml;\nvar _c;\n$RefreshReg$(_c, \"BulkFileXml\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BulkFileXml","_s","selectedMethod","setSelectedMethod","files","setFiles","dropFileUpload","e","dragOverHandler","handleDragEnter","handleDragLeave","traditionalFileUpload","selectedFiles","Array","from","target","_textContent","value","className","children","onDrop","onDragOver","onDragEnter","onDragLeave","dragState","htmlFor","id","type","hidden","accept","onChange","multiple","fileName","_jsxFileName","lineNumber","columnNumber","dropMsg","length","map","f","i","name","placeholder","variant","color","_c","$RefreshReg$"],"sources":["/home/joseberbary/Documents/Workspace/teste_pratico/Front/src/components/Content/BulkFileXml.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport \"./content.scss\"; // Importando o arquivo content.scss\n\nexport default function BulkFileXml() {\n  const [selectedMethod, setSelectedMethod] = useState(\"file\"); // Estado para acompanhar o método selecionado (arquivo ou texto)\n  const [files, setFiles] = useState([]); // Estado para acompanhar os arquivos selecionados\n\n  const dropFileUpload = (e) => {\n    // Lógica para manipular o evento de soltar arquivos na área de soltar\n  };\n\n  const dragOverHandler = (e) => {\n    // Lógica para manipular o evento de arrastar sobre a área de soltar\n  };\n\n  const handleDragEnter = (e) => {\n    // Lógica para manipular o evento de entrada do mouse na área de soltar\n  };\n\n  const handleDragLeave = (e) => {\n    // Lógica para manipular o evento de saída do mouse da área de soltar\n  };\n\n  const traditionalFileUpload = (e) => {\n    // Lógica para manipular o evento de seleção de arquivo tradicional\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n\n  const _textContent = (value) => {\n    // Lógica para manipular o conteúdo do texto\n  };\n\n  return (\n    <Box className=\"container\">\n      <Box\n        className=\"content-zone\"\n        onDrop={(e) => dropFileUpload(e)}\n        onDragOver={(e) => dragOverHandler(e)}\n        onDragEnter={(e) => handleDragEnter(e)}\n        onDragLeave={(e) => handleDragLeave(e)}\n      >\n        {selectedMethod === \"file\" && (\n          <div className={`info ${dragState && \"drop-enabled\"}`}>\n            <div className=\"drop-or-upload\">\n              <h3>\n                <label htmlFor=\"fileUpload\" className=\"custom-link\">\n                  <input\n                    id=\"fileUpload\"\n                    type=\"file\"\n                    hidden\n                    accept=\"text/xml\"\n                    onChange={(e) => traditionalFileUpload(e)}\n                    multiple\n                  />\n                  {dropMsg}\n                </label>\n              </h3>\n            </div>\n            {files && files.length > 0 && (\n              <small className=\"file-name\">\n                <>\n                  Arquivo(s) selecionado(s):\n                  <ul>\n                    {files.map((f, i) => {\n                      return <li key={i}>{f.name}</li>;\n                    })}\n                  </ul>\n                </>\n              </small>\n            )}\n          </div>\n        )}\n        {selectedMethod === \"text\" && (\n          <>\n            <textarea\n              className=\"text-box\"\n              placeholder=\"Cole o conteúdo do XML aqui\"\n              onChange={(e) => _textContent(e.target.value)}\n            />\n          </>\n        )}\n      </Box>\n      <Box className=\"buttonContainer\">\n        <Button variant=\"contained\" color=\"primary\" className=\"primaryButton\">\n          Buscar\n        </Button>\n        <Button variant=\"contained\" color=\"primary\">\n          Salvar\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}